-- Tabla de Preguntas
CREATE TABLE IF NOT EXISTS public.questions (
    id SERIAL PRIMARY KEY,
    question_name VARCHAR(50) NOT NULL
);

-- Tabla de Subniveles
CREATE TABLE IF NOT EXISTS public.sublevels (
    id SERIAL PRIMARY KEY,
    question_id INTEGER NOT NULL REFERENCES public.questions(id) ON DELETE CASCADE,
    sublevel_name VARCHAR(50) NOT NULL,
    correct_answer TEXT,
    time_limit INTERVAL
);

-- Table: public.user_sublevel_progress

-- DROP TABLE IF EXISTS public.user_sublevel_progress;

CREATE TABLE IF NOT EXISTS public.user_sublevel_progress
(
    id integer NOT NULL DEFAULT nextval('user_sublevel_progress_id_seq'::regclass),
    user_id integer NOT NULL,
    sublevel_id integer NOT NULL,
    completed boolean DEFAULT false,
    time_taken interval,
    answer text COLLATE pg_catalog."default",
    question_id integer NOT NULL,
    CONSTRAINT user_sublevel_progress_pkey PRIMARY KEY (id),
    CONSTRAINT user_sublevel_progress_user_id_sublevel_id_key UNIQUE (user_id, sublevel_id),
    CONSTRAINT user_sublevel_progress_question_id_fkey FOREIGN KEY (question_id)
        REFERENCES public.questions (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT user_sublevel_progress_sublevel_id_fkey FOREIGN KEY (sublevel_id)
        REFERENCES public.sublevels (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.user_sublevel_progress
    OWNER to postgres;
INSERT INTO public.questions (question_name)
VALUES ('Pregunta #1')
-- Subnivel 1
INSERT INTO public.sublevels (question_id, sublevel_name, correct_answer, time_limit)
VALUES (1, '1', '3-2-1-5-4', '00:02:30');

-- Subnivel 2
INSERT INTO public.sublevels (question_id, sublevel_name, correct_answer, time_limit)
VALUES (1, '2', '4-3-1-2-5', '00:01:30');